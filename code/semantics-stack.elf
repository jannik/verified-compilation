svalue : type. %name svalue W.
sstore : type. %name sstore Tau.

wnum : nat -> svalue.
wclos : sstore -> sprog -> svalue.

sstore/nil : sstore.
sstore/cons : sstore -> svalue -> sstore.



frames : type. %name frames Xi.

frames/nil : frames.
frames/cons : frames -> sstore -> sprog -> frames.



wstack : type. %name wstack Psi.

wstack/nil : wstack.
wstack/cons : wstack -> svalue -> wstack.



seval-var : sstore -> nat -> svalue -> type. %name seval-var DSV.
%mode seval-var +Tau +I -W.

seval-var/here : seval-var (sstore/cons Tau W) z W.

seval-var/there : seval-var (sstore/cons Tau W') (s I) W
                   <- seval-var Tau I W.



sstep : frames -> wstack -> frames -> wstack -> type. %name sstep DS.
%mode sstep +Xi +Psi -Xi' -Psi'.

sstep/num : sstep (frames/cons Xi Tau (sprog/cons (snum N) S*)) Psi
                  (frames/cons Xi Tau S*) (wstack/cons Psi (wnum N)).

sstep/var : sstep (frames/cons Xi Tau (sprog/cons (svar I) S*)) Psi
                  (frames/cons Xi Tau S*) (wstack/cons Psi W)
             <- seval-var Tau I W.

sstep/lam : sstep (frames/cons Xi Tau (sprog/cons (slam S*') S*)) Psi
                  (frames/cons Xi Tau S*) (wstack/cons Psi (wclos Tau S*')).

sstep/app : sstep (frames/cons Xi Tau (sprog/cons sapp S*))
                    (wstack/cons (wstack/cons Psi (wclos Tau' S*')) W)
                  (frames/cons (frames/cons Xi Tau S*) (sstore/cons Tau' W) S*') Psi.

sstep/nil : sstep (frames/cons Xi Tau sprog/nil) Psi
                  Xi Psi.



ssteps : frames -> wstack -> frames -> wstack -> type. %name ssteps DS*.
%mode ssteps +Xi +Psi -Xi' -Psi'.

ssteps/refl : ssteps Xi Psi Xi Psi.

ssteps/trans : ssteps Xi Psi Xi'' Psi''
                <- sstep Xi Psi Xi' Psi'
                <- ssteps Xi' Psi' Xi'' Psi''.



seval : sprog -> svalue -> type.
%mode seval +S* -W.

seval/ : seval S* W
          <- ssteps (frames/cons frames/nil sstore/nil S*) wstack/nil
                    frames/nil (wstack/cons wstack/nil W).
