% Translation of values.
cor : value -> exp -> type. %name cor DC.
%mode cor +U -C.

% Translation of variables.
trans-hb-var : env -> nat -> exp -> type. %name trans-hb-var DTV.
%mode trans-hb-var +Alph +I -C.

% Translation between HOAS and de Bruijn.
trans-hb : env -> bexp -> exp -> type. %name trans-hb DT.
%mode trans-hb +Alph +B -E.



% rules for cor

cor/num : cor (vnum N) (num N).

cor/fun : cor (vclos Alph B) (lam E)
           <- trans-hb Alph (blam B) (lam E).



% rules for trans-hb-var

trans-hb-var/here : trans-hb-var (env/cons Alph U) z C
                     <- cor U C.

trans-hb-var/there : trans-hb-var (env/cons Alph U') (s I) C
                      <- trans-hb-var Alph I C.



% rules for trans-hb

trans-hb/num : trans-hb Alph (bnum N) (num N).

trans-hb/var : trans-hb Alph (bvar I) E
                <- trans-hb-var Alph I E.

trans-hb/lam : trans-hb Alph (blam B1) (lam E1)
                <- ({v : value} {x : exp}
                      cor v x -> trans-hb (env/cons Alph v) B1 (E1 x)).

trans-hb/app : trans-hb Alph (bapp B1 B2) (app E1 E2)
                <- trans-hb Alph B1 E1
                <- trans-hb Alph B2 E2.

trans-hb/suc : trans-hb Alph (bsuc B1) (suc E1)
                <- trans-hb Alph B1 E1.

%block bl-trans-hb
   : block {v : value} {x : exp} {dc : cor v x}.

% Example showing that trans-hb is not total.
%query 0 * {v} {x} cor v x -> trans-hb env/nil B x.
