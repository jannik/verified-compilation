mprog-length : mprog -> nat -> type.
%mode mprog-length +Q -N.

mprog-length/nil : mprog-length mprog/nil z.

mprog-length/cons : mprog-length (mprog/cons M Q) (s N)
                     <- mprog-length Q N.

%worlds () (mprog-length _ _).
%total Q (mprog-length Q _).



shift-minst : nat -> minst -> minst -> type.
%mode shift-minst +S +M -M'.

shift-minst/pushnum : shift-minst S (mpushnum N) (mpushnum N).

shift-minst/pushvar : shift-minst S (mpushvar I) (mpushvar I).

shift-minst/pushclos : shift-minst S (mpushclos L) (mpushclos L^S)
                        <- add S L L^S.

shift-minst/call : shift-minst S (mcall L) (mcall L^S)
                    <- add S L L^S.

shift-minst/ret : shift-minst S mret mret.

shift-minst/halt : shift-minst S mhalt mhalt.

%worlds () (shift-minst _ _ _).
%total {} (shift-minst _ _ _).



shift-mprog : nat -> mprog -> mprog -> type.
%mode shift-mprog +S +Q -Q'.

shift-mprog/nil : shift-mprog S mprog/nil mprog/nil.

shift-mprog/cons : shift-mprog S (M ; Q) (M^S ; Q^S)
                    <- shift-minst S M M^S
                    <- shift-mprog S Q Q^S.

%worlds () (shift-mprog _ _ _).
%total Q (shift-mprog _ Q _).



trans-sm' : sprog -> mprog -> type.
%mode trans-sm' +P -Q.

trans-sm'/num : trans-sm' (sprog/cons (snum N) P) (mpushnum N ; Q^1)
                <- trans-sm' P Q
                <- shift-mprog 1 Q Q^1.

trans-sm'/var : trans-sm' (sprog/cons (svar I) P) (mpushvar I ; Q^1)
                <- trans-sm' P Q
                <- shift-mprog 1 Q Q^1.

trans-sm'/lam : trans-sm' (sprog/cons (slam P') P) (mpushclos (s Q#) ; Q^1 ;; Q'^1+Q#)
                <- trans-sm' P Q
                <- shift-mprog 1 Q Q^1
                <- mprog-length Q^1 Q#
                <- trans-sm' P' Q'
                <- shift-mprog (s Q#) Q' Q'^1+Q#.

trans-sm'/app : trans-sm' (sprog/cons sapp P) (mcall 1 ; Q^1)
                <- trans-sm' P Q
                <- shift-mprog 1 Q Q^1.

trans-sm'/ret : trans-sm' sprog/nil (mret ; mprog/nil).

%worlds () (trans-sm' _ _).
%total P (trans-sm' P _).



trans-sm : sprog -> mprog -> label -> type.
%mode trans-sm +P -Q -L.

trans-sm/ : trans-sm P (mhalt ; Q^1) 1
             <- trans-sm' P Q
             <- shift-mprog 1 Q Q^1.
