mvalue : type. %name mvalue R.
mstore : type. %name mstore Alpha.

rnum : number -> mvalue.
rclos : mstore -> label -> mvalue.

mstore/nil : mstore.
mstore/cons : mstore -> mvalue -> mstore.



rstack : type. %name rstack Phi.

rstack/nil : rstack.
rstack/cons : rstack -> mvalue -> rstack.



rstack/single = rstack/cons rstack/nil.



mframes : type. %name mframes Gamma.

mframes/nil : mframes.
mframes/cons : mframes -> mstore -> label -> mframes.

mframes/final = mframes/cons mframes/nil mstore/nil.



mvar-lookup : mstore -> nat -> mvalue -> type. %name mvar-lookup DVL.
%mode mvar-lookup +Alpha +I -R.

mvar-lookup/here : mvar-lookup (mstore/cons Alpha R) z R.

mvar-lookup/there : mvar-lookup (mstore/cons Alpha R') (s I) R
                     <- mvar-lookup Alpha I R.



label-lookup : mprog -> label -> minst -> type. %name label-lookup DLL.
%mode label-lookup +Q +L -M.

label-lookup/here : label-lookup (M ; Q) z M.

label-lookup/there : label-lookup (M' ; Q) (s L) M
                      <- label-lookup Q L M.

%worlds () (label-lookup _ _ _).
%unique label-lookup +Q +L -1M.



mstep : mprog -> mframes -> label -> rstack -> mframes -> label -> rstack -> type. %name mstep DM.
%mode mstep +Q +Gamma +L +Phi -Gamma' -L' -Phi'.

mstep/pushnum : mstep Q (mframes/cons Gamma Alpha L-Ret) L Phi
                        (mframes/cons Gamma Alpha L-Ret) (s L) (rstack/cons Phi (rnum N))
                 <- label-lookup Q L (mpushnum N).

mstep/pushvar : mstep Q (mframes/cons Gamma Alpha L-Ret) L Phi
                        (mframes/cons Gamma Alpha L-Ret) (s L) (rstack/cons Phi R)
                 <- label-lookup Q L (mpushvar I)
                 <- mvar-lookup Alpha I R.

mstep/pushclos : mstep Q (mframes/cons Gamma Alpha L-Ret) L Phi
                         (mframes/cons Gamma Alpha L-Ret) (s L) (rstack/cons Phi (rclos Alpha L'))
                  <- label-lookup Q L (mpushclos L').

mstep/call : mstep Q (mframes/cons Gamma Alpha L-Ret) L (rstack/cons (rstack/cons Phi (rclos Alpha' L')) R)
                     (mframes/cons (mframes/cons Gamma Alpha L-Ret) (mstore/cons Alpha' R) L-Cont) L' Phi
              <- label-lookup Q L (mcall L-Cont).

mstep/ret : mstep Q (mframes/cons Gamma Alpha' L-Ret) L Phi
                    Gamma L-Ret Phi
             <- label-lookup Q L mret.



msteps : mprog -> mframes -> label -> rstack -> mframes -> label -> rstack -> type. %name ssteps DMM.
%mode msteps +Q +Gamma +L +Phi -Gamma' -L' -Phi'.

msteps/zero : msteps Q Gamma L Phi Gamma L Phi.

msteps/more : msteps Q Gamma L Phi Gamma'' L'' Phi''
               <- mstep Q Gamma L Phi Gamma' L' Phi'
               <- msteps Q Gamma' L' Phi' Gamma'' L'' Phi''.



meval : mprog -> label -> mvalue -> type. %name meval DQ.
%mode meval +Q +L -R.

meval/ : meval Q L R
          <- msteps Q (mframes/final z) L rstack/nil
                      mframes/nil L' (rstack/single R)
          <- label-lookup Q L' mhalt.
