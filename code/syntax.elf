% Natural numbers.
nat : type. %name nat N.

z : nat.
s : nat -> nat.

%worlds () (nat).



% The source language -- uses higher-order abstract syntax.
exp : type. %name exp E x.

num : nat -> exp.
lam : (exp -> exp) -> exp.
app : exp -> exp -> exp.

%block bl-exp : block {e : exp}.
%worlds (bl-exp) (exp).



canon : exp -> type. %name canon DC.

canon/num : canon (num N).

canon/lam : canon (lam E).



rexp : type. %name rexp R.
var : type. %name var X x.

rnum : nat -> rexp.
rvar : var -> rexp.
rlam : (var -> rexp) -> rexp.
rapp : rexp -> rexp -> rexp.

%block bl-var : block {x : var}.
%worlds (bl-var) (var) (rexp).



% The target language -- uses de Bruijn indices.
bexp : type. %name bexp B.

bnum : nat -> bexp.
bvar : nat -> bexp.
blam : bexp -> bexp.
bapp : bexp -> bexp -> bexp.
